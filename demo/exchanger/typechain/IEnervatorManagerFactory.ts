/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, Signer } from "ethers";
import { Provider } from "ethers/providers";

import { IEnervatorManager } from "./IEnervatorManager";

export class IEnervatorManagerFactory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IEnervatorManager {
    return new Contract(address, _abi, signerOrProvider) as IEnervatorManager;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "operator",
        type: "address"
      },
      {
        indexed: false,
        name: "from",
        type: "address"
      },
      {
        indexed: false,
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        name: "amount",
        type: "uint256"
      },
      {
        indexed: false,
        name: "data",
        type: "bytes"
      },
      {
        indexed: false,
        name: "operatorData",
        type: "bytes"
      },
      {
        indexed: false,
        name: "token",
        type: "address"
      },
      {
        indexed: false,
        name: "fromBalance",
        type: "uint256"
      },
      {
        indexed: false,
        name: "toBalance",
        type: "uint256"
      }
    ],
    name: "TokensReceived",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "operator",
        type: "address"
      },
      {
        indexed: false,
        name: "from",
        type: "address"
      },
      {
        indexed: false,
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        name: "amount",
        type: "uint256"
      },
      {
        indexed: false,
        name: "data",
        type: "bytes"
      },
      {
        indexed: false,
        name: "operatorData",
        type: "bytes"
      },
      {
        indexed: false,
        name: "token",
        type: "address"
      },
      {
        indexed: false,
        name: "fromBalance",
        type: "uint256"
      },
      {
        indexed: false,
        name: "toBalance",
        type: "uint256"
      }
    ],
    name: "TokensSent",
    type: "event"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "addTokens",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_amount",
        type: "uint256"
      }
    ],
    name: "burnTokens",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_token",
        type: "address"
      }
    ],
    name: "setToken",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_amount",
        type: "int128"
      }
    ],
    name: "setNewTPES",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_amount",
        type: "int128"
      }
    ],
    name: "setPerCapitaEnergy",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_recipient",
        type: "address"
      },
      {
        name: "_amount",
        type: "uint256"
      },
      {
        name: "_buyData",
        type: "bytes"
      }
    ],
    name: "send",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getPricePerMWh",
    outputs: [
      {
        name: "",
        type: "int128"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getCurrentTPES",
    outputs: [
      {
        name: "",
        type: "int128"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getOldTPES",
    outputs: [
      {
        name: "",
        type: "int128"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getPerCapitaEnergy",
    outputs: [
      {
        name: "",
        type: "int128"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getUnitValue",
    outputs: [
      {
        name: "",
        type: "int256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  }
];
