/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, Signer } from "ethers";
import { Provider } from "ethers/providers";

import { Forex } from "./Forex";

export class ForexFactory {
  static connect(address: string, signerOrProvider: Signer | Provider): Forex {
    return new Contract(address, _abi, signerOrProvider) as Forex;
  }
}

const _abi = [
  {
    inputs: [
      {
        name: "_forexManager",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_code",
        type: "bytes32"
      },
      {
        name: "_rate",
        type: "int128"
      }
    ],
    name: "setRate",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "getNumCodes",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        name: "_index",
        type: "uint256"
      }
    ],
    name: "getCode",
    outputs: [
      {
        name: "",
        type: "bytes32"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        name: "_code",
        type: "bytes32"
      }
    ],
    name: "getRate",
    outputs: [
      {
        name: "",
        type: "int128"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  }
];
