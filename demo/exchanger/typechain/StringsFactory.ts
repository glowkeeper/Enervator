/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { Strings } from "./Strings";

export class StringsFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }
  deploy(): Promise<Strings> {
    return super.deploy() as Promise<Strings>;
  }
  getDeployTransaction(): UnsignedTransaction {
    return super.getDeployTransaction();
  }
  attach(address: string): Strings {
    return super.attach(address) as Strings;
  }
  connect(signer: Signer): StringsFactory {
    return super.connect(signer) as StringsFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Strings {
    return new Contract(address, _abi, signerOrProvider) as Strings;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "_a",
        type: "bytes32"
      },
      {
        name: "_b",
        type: "bytes32"
      }
    ],
    name: "compare",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        name: "_a",
        type: "string"
      },
      {
        name: "_b",
        type: "string"
      }
    ],
    name: "compare",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        name: "_x",
        type: "bytes32"
      }
    ],
    name: "bytes32ToStr",
    outputs: [
      {
        name: "",
        type: "string"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        name: "_a",
        type: "string"
      },
      {
        name: "_xs",
        type: "string[]"
      }
    ],
    name: "getIndex",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        name: "_x",
        type: "bytes32"
      },
      {
        name: "_xs",
        type: "bytes32[]"
      }
    ],
    name: "getIndex",
    outputs: [
      {
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        name: "_x",
        type: "bytes32"
      },
      {
        name: "_xs",
        type: "bytes32[]"
      }
    ],
    name: "getExists",
    outputs: [
      {
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  }
];

const _bytecode =
  "0x610b7a610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610089576000357c01000000000000000000000000000000000000000000000000000000009004806302a334641461008e57806328602ab2146100be5780633a96fdd7146100ee578063745fca7b1461011e578063c55f207f1461014e578063ef0b23681461017e575b600080fd5b6100a860048036036100a39190810190610855565b6101ae565b6040516100b591906109c1565b60405180910390f35b6100d860048036036100d39190810190610819565b610228565b6040516100e59190610984565b60405180910390f35b610108600480360361010391908101906108c1565b610335565b6040516101159190610984565b60405180910390f35b610138600480360361013391908101906107c5565b61038b565b6040516101459190610984565b60405180910390f35b610168600480360361016391908101906107c5565b61043c565b60405161017591906109c1565b60405180910390f35b6101986004803603610193919081019061079c565b610522565b6040516101a5919061099f565b60405180910390f35b60008083511180156101c1575060008251115b6101ca57600080fd5b60008251905060008090505b835181101561021d5760608482815181106101ed57fe5b602002602001015190506102018682610335565b1561020f578192505061021d565b5080806001019150506101d6565b508091505092915050565b6000807f0100000000000000000000000000000000000000000000000000000000000000028360006020811061025a57fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614158015610321575060007f010000000000000000000000000000000000000000000000000000000000000002826000602081106102d957fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b61032a57600080fd5b818314905092915050565b6000808351118015610348575060008251115b61035157600080fd5b60608390506060839050805182511461036f57600092505050610385565b8080519060200120828051906020012014925050505b92915050565b6000807f010000000000000000000000000000000000000000000000000000000000000002836000602081106103bd57fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561040d57600080fd5b60008090506000835114610432576000610427858561043c565b905083518114159150505b8091505092915050565b6000807f0100000000000000000000000000000000000000000000000000000000000000028360006020811061046e57fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141580156104c2575060008251115b6104cb57600080fd5b60008251905060008090505b8351811015610517576104fd858583815181106104f057fe5b6020026020010151610228565b1561050a57809150610517565b80806001019150506104d7565b508091505092915050565b60608060206040519080825280601f01601f1916602001820160405280156105595781602001600182028038833980820191505090505b50905060005b60208110156105df5783816020811061057457fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000028282815181106105a357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061055f565b5080915050919050565b600082601f8301126105fa57600080fd5b813561060d61060882610a09565b6109dc565b9150818183526020840193506020810190508385602084028201111561063257600080fd5b60005b83811015610662578161064888826106e0565b845260208401935060208301925050600181019050610635565b5050505092915050565b600082601f83011261067d57600080fd5b813561069061068b82610a31565b6109dc565b9150818183526020840193506020810190508360005b838110156106d657813586016106bc88826106f4565b8452602084019350602083019250506001810190506106a6565b5050505092915050565b60006106ec8235610ae3565b905092915050565b600082601f83011261070557600080fd5b813561071861071382610a59565b6109dc565b9150808252602083016020830185838301111561073457600080fd5b61073f838284610aed565b50505092915050565b600082601f83011261075957600080fd5b813561076c61076782610a85565b6109dc565b9150808252602083016020830185838301111561078857600080fd5b610793838284610aed565b50505092915050565b6000602082840312156107ae57600080fd5b60006107bc848285016106e0565b91505092915050565b600080604083850312156107d857600080fd5b60006107e6858286016106e0565b925050602083013567ffffffffffffffff81111561080357600080fd5b61080f858286016105e9565b9150509250929050565b6000806040838503121561082c57600080fd5b600061083a858286016106e0565b925050602061084b858286016106e0565b9150509250929050565b6000806040838503121561086857600080fd5b600083013567ffffffffffffffff81111561088257600080fd5b61088e85828601610748565b925050602083013567ffffffffffffffff8111156108ab57600080fd5b6108b78582860161066c565b9150509250929050565b600080604083850312156108d457600080fd5b600083013567ffffffffffffffff8111156108ee57600080fd5b6108fa85828601610748565b925050602083013567ffffffffffffffff81111561091757600080fd5b61092385828601610748565b9150509250929050565b61093681610acd565b82525050565b600061094782610ab1565b6109518185610abc565b9350610961818560208601610afc565b61096a81610b2f565b840191505092915050565b61097e81610ad9565b82525050565b6000602082019050610999600083018461092d565b92915050565b600060208201905081810360008301526109b9818461093c565b905092915050565b60006020820190506109d66000830184610975565b92915050565b6000604051905081810181811067ffffffffffffffff821117156109ff57600080fd5b8060405250919050565b600067ffffffffffffffff821115610a2057600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115610a4857600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115610a7057600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115610a9c57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60008115159050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610b1a578082015181840152602081019050610aff565b83811115610b29576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a7230582001ebc3067250ba1c861a58ccfcafa340a4d94b818b9d1c953218940fe84525876c6578706572696d656e74616cf50037";
